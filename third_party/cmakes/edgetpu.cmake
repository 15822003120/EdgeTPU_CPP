add_definitions(-DUSE_EDGETPU)

if(${BUILD_SYSTEM} STREQUAL armv7)
	target_link_libraries(${ProjectName} ${CMAKE_CURRENT_LIST_DIR}/../edgetpu/libedgetpu/direct/armv7a/libedgetpu.so.1.0)
	file(COPY ${CMAKE_CURRENT_LIST_DIR}/../edgetpu/libedgetpu/direct/armv7a/libedgetpu.so.1.0 DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
elseif(${BUILD_SYSTEM} STREQUAL aarch64)
	target_link_libraries(${ProjectName} ${CMAKE_CURRENT_LIST_DIR}/../edgetpu/libedgetpu/direct/aarch64/libedgetpu.so.1.0)
	file(COPY ${CMAKE_CURRENT_LIST_DIR}/../edgetpu/libedgetpu/direct/aarch64/libedgetpu.so.1.0 DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
elseif(${BUILD_SYSTEM} STREQUAL x64_linux)
	target_link_libraries(${ProjectName} ${CMAKE_CURRENT_LIST_DIR}/../edgetpu/libedgetpu/direct/k8/libedgetpu.so.1.0)
	file(COPY ${CMAKE_CURRENT_LIST_DIR}/../edgetpu/libedgetpu/direct/k8/libedgetpu.so.1.0 DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
elseif(${BUILD_SYSTEM} STREQUAL x64_windows)
	target_link_libraries(${ProjectName} ${CMAKE_CURRENT_LIST_DIR}/../edgetpu/libedgetpu/direct/x64_windows/edgetpu.dll.if.lib)
	file(COPY ${CMAKE_CURRENT_LIST_DIR}/../edgetpu/libedgetpu/direct/x64_windows/edgetpu.dll DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
else()
	message(FATAL_ERROR "[edgetpu] unexpected BUILD_SYSTEM" ${BUILD_SYSTEM})
endif()

target_include_directories(${ProjectName} PUBLIC ${CMAKE_CURRENT_LIST_DIR}/../edgetpu)
target_include_directories(${ProjectName} PUBLIC ${CMAKE_CURRENT_LIST_DIR}/../edgetpu/libedgetpu)
